#!/usr/bin/env bash


CONTAINER_NAME=java-demo
CONTAINER_PORT=5005
DEPLOYMENT_NAME=java-demo-app
K8S_SELECTOR=application
JVM_DEBUG_PORT=30333
NAMESPACE=test


CONTAINERS=($(kubectl get deployment "${DEPLOYMENT_NAME}" -o jsonpath='{.spec.template.spec.containers[*].name }'))

for i in ${!CONTAINERS[@]}; do
    if [ ".${CONTAINERS[$i]}" = ".${CONTAINER_NAME}" ]; then

        QUERY_PORT=$(printf \
            '{.spec.template.spec.containers[?(@.name==\"%s\")].ports[?(@.containerPort==%d)].containerPort}' \
            ${CONTAINER_NAME} ${CONTAINER_PORT})

        if [ ".${CONTAINER_PORT}" != ".$(kubectl get deployment java-demo-app  -o jsonpath=${QUERY_PORT})" ]; then
            kubectl patch deployment "${DEPLOYMENT_NAME}" \
                --type='json' \
                -p="[{"op": "add", "path": "/spec/template/spec/containers/${i}/ports/-", "value": { "containerPort": 5005, "protocol": "TCP" }}]"
        fi
    fi
done


# kubectl get deployment java-demo-app \
#     -o jsonpath="{.spec.template.spec.containers[?(@.name=="java-demo")].ports[?(@.containerPort==5005)].containerPort}"


cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Service
metadata:
  name: debug-${DEPLOYMENT_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    name: ${K8S_SELECTOR}
  type: NodePort
  ports:
  - port: 5005
    name: debug
    targetPort: 5005
    nodePort: ${JVM_DEBUG_PORT}
    protocol: TCP
EOF
