#!/usr/bin/env bash

set -eu

# patch-deplyoment
DEPLOYMENT_NAME=java-demo-app
CONTAINER_NAME=java-demo
NAMESPACE=test

DEPLOYMENT_NAME=api-web
CONTAINER_NAME=api-web
NAMESPACE=yuuvis


CONTAINER_PORT=5005
JVM_DEBUG_PORT=30222


CONTAINERS=($(kubectl get deployment "${DEPLOYMENT_NAME}" -o jsonpath='{.spec.template.spec.containers[*].name }'))

for i in ${!CONTAINERS[@]}; do
    if [ ".${CONTAINERS[$i]}" = ".${CONTAINER_NAME}" ]; then

        QUERY_PORT=$(printf \
            '{.spec.template.spec.containers[?(@.name==\"%s\")].ports[?(@.containerPort==%d)].containerPort}' \
            ${CONTAINER_NAME} ${CONTAINER_PORT})

        if [ ".${CONTAINER_PORT}" != ".$(kubectl get deployment ${DEPLOYMENT_NAME}  -o jsonpath=${QUERY_PORT})" ]; then
            kubectl patch deployment "${DEPLOYMENT_NAME}" \
            --type='json' \
            -p='[{"op": "add", "path": "/spec/template/spec/containers/'"${i}"'/ports/-", "value": {"containerPort": 5005, "protocol": "TCP" }}]'
        fi
    fi
done


JAVA_DEBUG_AGENT='-Xdebug -agentlib:jdwp=transport=dt_socket,address=0.0.0.0:5005,server=y,suspend=n'
kubectl patch deployment "${DEPLOYMENT_NAME}" \
     -p '{"spec":{"template":{"spec":{"containers":[{"name": "'"${CONTAINER_NAME}"'","env": [{"name":"JAVA_TOOL_OPTIONS","value": "'"${JAVA_DEBUG_AGENT}"'"}]}]}}}}'


# add custom label
kubectl patch deploy "${DEPLOYMENT_NAME}"  \
    -p '{"spec":{"template":{"metadata":{"labels":{"debug": "agentlib"}}}}}'



cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Service
metadata:
  name: debug-${DEPLOYMENT_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    debug: agentlib
  type: NodePort
  ports:
  - port: 5005
    name: debug
    targetPort: 5005
    nodePort: ${JVM_DEBUG_PORT}
    protocol: TCP
EOF
